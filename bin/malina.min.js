(function(e,n){typeof exports==="object"&&typeof module!=="undefined"?n(exports,require("acorn"),require("astring")):typeof define==="function"&&define.amd?define(["exports","acorn","astring"],n):(e=e||self,n(e.malina={},e.acorn,e.astring))})(this,function(e,n,t){"use strict";n=n&&Object.prototype.hasOwnProperty.call(n,"default")?n["default"]:n;t=t&&Object.prototype.hasOwnProperty.call(t,"default")?t["default"]:t;function l(e,n){if(!e)throw n}function i(e){let n=0;const t=()=>{l(n<e.length,"EOF");return e[n++]};const i=()=>{let i=n;let r=t();l(r==="<","Tag error");let o=null;let c=true;let a="";while(true){r=t();if(o){if(r!=o)continue;o=null;continue}if(r==='"'){o='"';continue}if(r==="'"){o="'";continue}if(r===">"){const t=["area","base","br","col","embed","hr","img","input","link","meta","param","source","track","wbr"];let l=e[n-1]=="/"||t.indexOf(a)>=0;return{type:"node",name:a,openTag:e.substring(i,n),start:i,end:n,closedTag:l}}if(c){if(r.match(/[\da-zA-Z]/)){a+=r;continue}else c=false}}};const r=l=>{let i=`</${l}>`;let r,o,c,a=n;while(true){c=o;o=t();if(r){if(o!=r)continue;if(c=="\\")continue;r=null;continue}if(o=='"'||o=="'"||o=="`"){r=o;continue}if(o=="<"){if(e.substring(n-1,n+i.length-1)==i){let t=n-1;n+=i.length-1;return e.substring(a,t)}}}};const o=()=>{let t=n;let i=e.substring(t).indexOf("</style>")+t;l(i>=0,"<style> is not closed");n=i+9;return e.substring(t,i)};const c=()=>{let i=n;l(t()==="{","Bind error");while(true){let l=t();if(l!="}")continue;return{value:e.substring(i+1,n-1)}}};const a=()=>{let t=n;let i=e.indexOf("--\x3e",t);l(i>=0,"Comment is not closed");i+=3;n=i;return e.substring(t,i)};const s=u=>{let f=null;const p=()=>{if(!f)return;u.body.push(f);f=null};while(n<e.length){let d=e[n];if(d==="<"){p();if(e.substring(n,n+4)==="\x3c!--"){u.body.push({type:"comment",content:a()});continue}if(e[n+1]==="/"){let e="";n+=2;while(true){d=t();if(d===">")break;e+=d}l(e===u.name,"Wrong close-tag: "+u.name+" - "+e);return}let c=i();u.body.push(c);if(c.name==="script"){c.type="script";c.content=r("script");continue}else if(c.name==="template"){c.type="template";c.content=r("template");continue}else if(c.name==="style"){c.type="style";c.content=o();continue}if(c.closedTag)continue;c.body=[];s(c);continue}else if(d==="{"){if(["#","/",":"].indexOf(e[n+1])>=0){p();let e=c();if(e.value.startsWith("#each ")){let n={type:"each",value:e.value,body:[]};u.body.push(n);s(n);continue}else if(e.value==="/each"){l(u.type==="each","Bind error: /each");return}else if(e.value.startsWith("#if ")){let n={type:"if",value:e.value,body:[]};u.body.push(n);s(n);continue}else if(e.value==="/if"){l(u.type==="if","Bind error: /if");return}else if(e.value===":else"){l(u.type==="if","Bind error: :else");u.bodyMain=u.body;u.body=[]}else throw"Error binding: "+e.value}}if(!f){f={type:"text",value:""}}f.value+=t()}p();l(u.type==="root","File ends to early")};let u={type:"root",body:[]};s(u);return u}function r(e,l={}){var i=n.parse(e,{ecmaVersion:6});const r={FunctionDeclaration:1,FunctionExpression:1,ArrowFunctionExpression:1};const o=e=>{if(r[e.type]&&e.body.body&&e.body.body.length){e.body.body.unshift({type:"ExpressionStatement",expression:{callee:{type:"Identifier",name:"$$apply"},type:"CallExpression"}})}};const c=function(e){for(let n in e){let t=e[n];if(typeof t==="object"){if(Array.isArray(t)){t.forEach(c)}else if(t&&t.type){c(t)}}}o(e)};c(i.body);i.body.push({type:"ExpressionStatement",expression:{callee:{type:"Identifier",name:"$$runtime"},type:"CallExpression"}});i.body=[{body:{type:"BlockStatement",body:i.body},id:{type:'Identifier"',name:l.name},params:[{type:"Identifier",name:"$element"}],type:"FunctionDeclaration"}];return t.generate(i)}let o=0;let c;function a(e,n){let t=[`\n        function $$apply() {\n            if($$apply.planned) return;\n            $$apply.planned = true;\n            setTimeout(() => {\n                $$apply.planned = false;\n                $$apply.go();\n            }, 1);\n        };\n        (function() {\n            function $$htmlToFragment(html) {\n                let t = document.createElement('template');\n                t.innerHTML = html;\n                return t.content;\n            };\n            function $$removeItem(array, item) {\n                let i = array.indexOf(item);\n                if(i>=0) array.splice(i, 1);\n            };\n            function $$getElement(el, a) {\n                a.split(',').forEach(i => el = el.childNodes[i]);\n                return el;\n            }\n\n            function $$CD() {\n                this.children = [];\n                this.watchers = [];\n                this.destroyList = [];\n                this.onceList = [];\n            };\n            Object.assign($$CD.prototype, {\n                watch: function(fn, callback, mode) {\n                    this.watchers.push({fn: fn, cb: callback, value: undefined, ro: mode == 'ro'});\n                },\n                wf: function(fn, callback) {\n                    this.watch(fn, callback, 'ro');\n                },\n                wa: function(fn, callback) {\n                    this.watchers.push({fn: fn, cb: callback, value: undefined, a: true})\n                },\n                ev: function(el, event, callback) {\n                    el.addEventListener(event, callback);\n                    this.d(() => {\n                        el.removeEventListener(event, callback);\n                    });\n                },\n                d: function(fn) {\n                    this.destroyList.push(fn);\n                },\n                destroy: function() {\n                    this.watchers.length = 0;\n                    this.destroyList.forEach(fn => {\n                        try {\n                            fn();\n                        } catch (e) {\n                            console.error(e);\n                        }\n                    });\n                    this.destroyList.length = 0;\n                    this.children.forEach(cd => {\n                        cd.destroy();\n                    });\n                    this.children.length = 0;\n                },\n                once: function(fn) {\n                    this.onceList.push(fn);\n                }\n            });\n\n            let $cd = new $$CD();\n\n            const arrayCompare = (a, b) => {\n                let e0 = a == null || !a.length;\n                let e1 = b == null || !b.length;\n                if(e0 !== e1) return true;\n                if(e0 === true) return false;\n                if(a.length !== b.length) return true;\n                for(let i=0;i<a.length;i++) {\n                    if(a[i] !== b[i]) return true;\n                }\n                return false;\n            };\n            $$apply.go = () => {\n                let loop = 10;\n                let once = [];\n                while(loop >= 0) {\n                    let changes = 0;\n                    let index = 0;\n                    let queue = [];\n                    let cd = $cd;\n                    let i, w, value;\n                    while(cd) {\n                        for(let i=0;i<cd.watchers.length;i++) {\n                            w = cd.watchers[i];\n                            value = w.fn();\n                            if(w.a) {\n                                if(arrayCompare(w.value, value)) {\n                                    w.value = value.slice();\n                                    if(!w.ro) changes++;\n                                    w.cb(w.value);\n                                }\n                            } else {\n                                if(w.value !== value) {\n                                    w.value = value;\n                                    if(!w.ro) changes++;\n                                    w.cb(w.value);\n                                }\n                            }\n                        };\n                        if(cd.children.length) queue.push.apply(queue, cd.children);\n                        if(cd.onceList.length) {\n                            once.push.apply(once, cd.onceList);\n                            cd.onceList.length = 0;\n                        }\n                        cd = queue[index++];\n                    }\n                    loop--;\n                    if(!changes) break;\n                }\n                once.forEach(fn => {\n                    try {\n                        fn();\n                    } catch (e) {\n                        console.error(e);\n                    }\n                });\n            };\n\n    `];c=function(e,t={}){let l=[];let i=[];let r=[];let c={};function a(e,s){let $=0;const y=()=>{i[e]=$++};const m=()=>{let e,n=i;if(t.top0)n=n.slice(1);if(n.length)e=`$$getElement($element, '${n.join(",")}')`;else e="$element";let l=c[e];if(!l){c[e]=l="el"+o++;r.push(`var ${l} = ${e};`)}return l};let g;s.body.forEach(t=>{if(t.type==="text"){if(g!==l.length)y();if(t.value.indexOf("{")>=0){l.push(" ");let e=u(t.value);r.push(`$cd.wf(() => ${e}, (value) => {${m()}.textContent=value;});`)}else l.push(t.value);g=l.length}else if(t.type==="script"){return}else if(t.type==="style"){y();l.push(t.openTag);l.push(t.content);l.push("</style>")}else if(t.type==="template"){y();l.push(t.openTag);l.push(t.content);l.push("</template>")}else if(t.type==="node"){y();if(t.openTag.indexOf("{")>=0){let e=f(t.openTag);let n=["<"+t.name];e.forEach(e=>{let t=p(e,m());if(t.prop)n.push(t.prop);if(t.bind)r.push(t.bind)});if(t.closedTag)n.push("/>");else n.push(">");l.push(n.join(" "))}else l.push(t.openTag);if(!t.closedTag){a(e+1,t);l.push(`</${t.name}>`)}}else if(t.type==="each"){y();l.push(`\x3c!-- ${t.value} --\x3e`);t.parent=s;let e=d(t,m());r.push(e.source)}else if(t.type==="if"){y();l.push(`\x3c!-- ${t.value} --\x3e`);let e=h(t,m());r.push(e.source)}else if(t.type==="comment"){if(!n.preserveComments)return;y();l.push(t.content)}});i.length=e}a(0,e);let $=[];let y="$$build"+o++;l=s(l.join(""));$.push(`\n            function ${y}($cd, $element) {\n        `);$.push(r.join("\n"));$.push(`    };`);return{name:y,tpl:l,source:$.join("")}};let l=c(e);t.push(l.source);t.push(`\n        $element.innerHTML = \`${s(l.tpl)}\`;\n        ${l.name}($cd, $element);\n        $$apply();\n    `);t.push(`\n})();`);return t.join("")}function s(e){return e.replace(/`/g,"\\`")}function u(e,n){let t=0;let i=0;let r="";let o="";let c=[];let a;let u=e.length;if(n){if(e[0]==="{")n=false;else{t++;u--;n=e[0];l(n===e[u],e)}}while(t<u){let n=e[t++];if(i==1){if(a){if(n===a)a=null;o+=n;continue}if(n==='"'||n==="'"){a=n;o+=n;continue}if(n==="}"){i=0;c.push("("+o+")");o="";continue}o+=n;continue}if(n==="{"){if(r){c.push("`"+s(r)+"`");r=""}i=1;continue}r+=n}if(r)c.push("`"+s(r)+"`");l(i==0,"Wrong expression: "+e);return c.join("+")}function f(e){let n=e.length-1;l(e[0]==="<");l(e[n]===">");if(e[n-1]=="/")n--;let t=1;let i=1;let r;let o=[];let c=true;const a=()=>{l(t<e.length,"EOF");return e[t++]};const s=n=>{if(t<=i)return;if(c){c=false;return}let l={content:e.substring(i,t+n)};if(r){l.name=e.substring(i,r-1);l.value=e.substring(r,t+n);r=null}else l.name=l.content;o.push(l)};let u=false;while(t<n){let e=a();if(e==='"'||e==="'"){while(e!=a());continue}if(u){u=e!="}";continue}if(e=="{"){u=true;continue}if(e==" "){s(-1);i=t;continue}if(e=="="&&!r){r=t}}s(0);return o}function p(e,n){let t=e.name.split(":");let i=t[0];function r(){let n=e.value.match(/^\{(.*)\}$/)[1];l(n,e.content);return n}if(i=="on"){let i=r();let o="",c=t[1].split("|");let a=c[0];c.slice(1).forEach(e=>{if(e=="preventDefault")o+=`$event.preventDefault();`;else if(e=="enter")o+=`if($event.keyCode != 13) return; $event.preventDefault();`});l(a,e.content);return{bind:`$cd.ev(${n}, "${a}", ($event) => { ${o} $$apply(); let $element=${n}; ${s(i)}});`}}else if(i=="bind"){let i=r();let o=t[1];l(o,e.content);if(o==="value"){return{bind:`$cd.ev(${n}, 'input', () => { ${i}=${n}.value; $$apply(); });\n                    $cd.wf(() => (${i}), (value) => { if(value != ${n}.value) ${n}.value = value; });`}}else if(o=="checked"){return{bind:`$cd.ev(${n}, 'input', () => { ${i}=${n}.checked; $$apply(); });\n                    $cd.wf(() => !!(${i}), (value) => { if(value != ${n}.checked) ${n}.checked = value; });`}}else throw"Not supported: "+e.content}else if(i=="class"&&t.length>1){let i=r();let o=t[1];l(o,e.content);return{bind:`$cd.wf(() => !!(${i}), (value) => { if(value) ${n}.classList.add("${o}"); else ${n}.classList.remove("${o}"); });`}}else if(i=="use"){let e=r();return{bind:`$cd.once(() => { $$apply(); let $element=${n}; ${e}; });`}}else{if(e.value&&e.value.indexOf("{")>=0){let t=u(e.value,true);return{bind:`$cd.wf(() => (${t}), (value) => { ${n}.setAttribute('${i}', value) });`}}return{prop:e.content}}}function d(e,n){let t=[];let i=e.body.filter(e=>e.type=="node");if(!i.length)i=[e.body[0]];l(i.length===1,"Only 1 node for #each");let r=c({body:i},{top0:true});let a=e.value.match(/^#each\s+(\S+)\s+as\s+(\w+)\s*$/);let u=a[1];let f=a[2];let p="eachBlock"+o++;t.push(`\n        function ${p} ($cd, top) {\n\n            function bind($ctx, ${f}) {\n                let $index;\n                ${r.source};\n                ${r.name}($ctx.cd, $ctx.el);\n                $ctx.reindex = function(i) { $index = i; };\n            };\n\n            let parentNode = top.parentNode;\n            let srcNode = document.createElement("${e.parent.name}");\n            srcNode.innerHTML=\`${s(r.tpl)}\`;\n            srcNode=srcNode.firstChild;\n\n            let mapping = new Map();\n            $cd.wa(() => (${u}), (array) => {\n                let prevNode = top;\n                let newMapping = new Map();\n\n                if(mapping.size) {\n                    let arrayAsSet = new Set();\n                    for(let i=0;i<array.length;i++) {\n                        arrayAsSet.add(array[i]);\n                    }\n                    mapping.forEach((ctx, item) => {\n                        if(arrayAsSet.has(item)) return;\n                        ctx.el.remove();\n                        ctx.cd.destroy();\n                        $$removeItem($cd.children, ctx.cd);\n                    });\n                    arrayAsSet.clear();\n                }\n\n                let i, item, next_ctx, el, ctx;\n                for(i=0;i<array.length;i++) {\n                    item = array[i];\n                    if(next_ctx) {\n                        ctx = next_ctx;\n                        next_ctx = null;\n                    } else ctx = mapping.get(item);\n                    if(ctx) {\n                        el = ctx.el;\n\n                        if(el.previousSibling != prevNode) {\n                            let insert = true;\n\n                            if(i + 1 < array.length && prevNode.nextSibling) {\n                                next_ctx = mapping.get(array[i + 1]);\n                                if(prevNode.nextSibling.nextSibling === next_ctx.el) {\n                                    parentNode.replaceChild(el, prevNode.nextSibling);\n                                    insert = false;\n                                }\n                            }\n\n                            if(insert) {\n                                parentNode.insertBefore(el, prevNode.nextSibling);\n                            }\n                        }\n    \n                    } else {\n                        el = srcNode.cloneNode(true);\n                        let childCD = new $$CD(); $cd.children.push(childCD);\n                        ctx = {el: el, cd: childCD};\n                        bind(ctx, item);\n                        parentNode.insertBefore(el, prevNode.nextSibling);\n                    }\n                    ctx.reindex(i);\n                    prevNode = el;\n                    newMapping.set(item, ctx);\n\n                };\n                mapping.clear();\n                mapping = newMapping;\n\n            });\n\n        }\n        ${p}($cd, ${n});\n    `);return{source:t.join("\n")}}function h(e,n){let t=[];let i=e.value.match(/^#if (.*)$/);let r=i[1];l(r,"Wrong binding: "+e.value);let a="ifBlock"+o++;t.push(`function ${a}($cd, $element) {`);let u,f;if(e.bodyMain){u=c({body:e.bodyMain});f=c(e);t.push(`\n            let elsefr = $$htmlToFragment(\`${s(f.tpl)}\`);\n            ${f.source}\n        `)}else{u=c(e)}t.push(`\n        let mainfr = $$htmlToFragment(\`${s(u.tpl)}\`);\n        ${u.source}\n    `);t.push(`\n        let childCD;\n        let elements = [];\n\n        function create(fr, builder) {\n            childCD = new $$CD();\n            $cd.children.push(childCD);\n            let el = fr.cloneNode(true);\n            for(let i=0;i<el.childNodes.length;i++) elements.push(el.childNodes[i]);\n            builder(childCD, el);\n            $element.parentNode.insertBefore(el, $element.nextSibling);\n        };\n\n        function destroy() {\n            if(!childCD) return;\n            $$removeItem($cd.children, childCD);\n            childCD.destroy();\n            childCD = null;\n            for(let i=0;i<elements.length;i++) elements[i].remove();\n            elements.length = 0;\n        };\n\n        $cd.wf(() => !!(${r}), (value) => {\n            if(value) {\n                destroy();\n                create(mainfr, ${u.name});\n            } else {\n                destroy();\n                `+(f?`if(elsefr) create(elsefr, ${f.name});`:"")+`\n            }\n        });\n    `);t.push(`};\n ${a}($cd, ${n});`);return{source:t.join("\n")}}function $(e,n={}){const t=i(e);let o;t.body.forEach(e=>{if(e.type!=="script")return;l(!o,"Multi script");o=e});if(!n.name)n.name="widget";o=r(o.content,n);const c=a(t,n);return o.split("$$runtime()").join(c)}e.compile=$;Object.defineProperty(e,"__esModule",{value:true})});