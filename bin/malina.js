!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("acorn"),require("astring")):"function"==typeof define&&define.amd?define(["exports","acorn","astring"],n):n((e=e||self).malina={},e.acorn,e.astring)}(this,function(e,n,t){"use strict";function l(e,n){if(!e)throw n}function i(e,l={}){let i={watchers:[]};var r=n.parse(e,{ecmaVersion:6});const o={FunctionDeclaration:1,FunctionExpression:1,ArrowFunctionExpression:1},a=function(e){for(let n in e){let t=e[n];"object"==typeof t&&(Array.isArray(t)?t.forEach(a):t&&t.type&&a(t))}(e=>{o[e.type]&&e.body.body&&e.body.body.length&&e.body.body.unshift({type:"ExpressionStatement",expression:{callee:{type:"Identifier",name:"$$apply"},type:"CallExpression"}})})(e)};a(r.body);let s=[];return r.body.forEach(n=>{if("FunctionDeclaration"==n.type&&"onMount"==n.id.name&&(i.$onMount=!0),"LabeledStatement"==n.type&&"$"==n.label.name)try{return void function(n){function t(e){if("Identifier"!=e.type&&!e.type.endsWith("Expression"))throw"Wrong expression"}if("ExpressionStatement"!=n.body.type)throw"Error";if("AssignmentExpression"==n.body.expression.type){const l=n.body.expression;if("="!=l.operator)throw"Error";if("Identifier"!=l.left.type)throw"Error";const r=l.left.name;t(l.right);const o=e.substring(l.right.start,l.right.end);i.watchers.push(`$watch($cd, () => (${o}), ($value) => {${r}=$value;});`)}else{if("SequenceExpression"!=n.body.expression.type)throw"Error";{const l=n.body.expression.expressions,r=l[l.length-1];if(["ArrowFunctionExpression","FunctionExpression"].indexOf(r.type)<0)throw"Error function";let o=e.substring(r.start,r.end);if(2==l.length){t(l[0]);let n=e.substring(l[0].start,l[0].end);i.watchers.push(`$watch($cd, () => (${n}), ${o});`)}else{if(!(l.length>2))throw"Error";{for(let e=0;e<l.length-1;e++)t(l[e]);let n=e.substring(l[0].start,l[l.length-2].end);i.watchers.push(`$cd.wa(() => [${n}], ($args) => { (${o}).apply(null, $args); });`)}}}}}(n)}catch(t){throw new Error(t+": "+e.substring(n.start,n.end))}s.push(n)}),r.body=s,r.body.push({type:"ExpressionStatement",expression:{callee:{type:"Identifier",name:"$$runtime"},type:"CallExpression"}}),r.body=[{body:{type:"BlockStatement",body:r.body},id:{type:'Identifier"',name:l.name},params:[{type:"Identifier",name:"$element"}],type:"FunctionDeclaration"}],i.code=t.generate(r),i}n=n&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n,t=t&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t;let r,o=0;function a(e,n){let t=["\n        function $$apply() {\n            if($$apply._p) return;\n            if($$apply.planned) return;\n            $$apply.planned = true;\n            setTimeout(() => {\n                $$apply.planned = false;\n                $$apply.go();\n            }, 1);\n        };\n        (function() {\n            function $$htmlToFragment(html) {\n                let t = document.createElement('template');\n                t.innerHTML = html;\n                return t.content;\n            };\n            function $$removeItem(array, item) {\n                let i = array.indexOf(item);\n                if(i>=0) array.splice(i, 1);\n            };\n            const $$childNodes = 'childNodes';\n\n            function $watch(cd, fn, callback, mode) {\n                var w = {fn: fn, cb: callback, value: void 0};\n                if(mode == 'ro') w.ro = true;\n                if(mode == 'init') w.value = fn();\n                cd.watchers.push(w);\n            }\n\n            function $$CD() {\n                this.children = [];\n                this.watchers = [];\n                this.destroyList = [];\n                this.onceList = [];\n            };\n            Object.assign($$CD.prototype, {\n                wf: function(fn, callback) {\n                    $watch(this, fn, callback, 'ro');\n                },\n                wa: function(fn, callback) {\n                    let w = {fn: fn, cb: callback, value: undefined, a: true};\n                    this.watchers.push(w);\n                    return w;\n                },\n                ev: function(el, event, callback) {\n                    el.addEventListener(event, callback);\n                    this.d(() => {\n                        el.removeEventListener(event, callback);\n                    });\n                },\n                d: function(fn) {\n                    this.destroyList.push(fn);\n                },\n                destroy: function() {\n                    this.watchers.length = 0;\n                    this.destroyList.forEach(fn => {\n                        try {\n                            fn();\n                        } catch (e) {\n                            console.error(e);\n                        }\n                    });\n                    this.destroyList.length = 0;\n                    this.children.forEach(cd => {\n                        cd.destroy();\n                    });\n                    this.children.length = 0;\n                },\n                once: function(fn) {\n                    this.onceList.push(fn);\n                }\n            });\n\n            let $cd = new $$CD();\n\n            const arrayCompare = (a, b) => {\n                let e0 = a == null || !a.length;\n                let e1 = b == null || !b.length;\n                if(e0 !== e1) return true;\n                if(e0 === true) return false;\n                if(a.length !== b.length) return true;\n                for(let i=0;i<a.length;i++) {\n                    if(a[i] !== b[i]) return true;\n                }\n                return false;\n            };\n            $$apply.go = () => {\n                $$apply._p = true;\n                try {\n                    $digest($cd);\n                } finally {\n                    $$apply._p = false;\n                }\n            };\n            \n            function $digest($cd) {\n                let loop = 10;\n                let once = [];\n                let w;\n                while(loop >= 0) {\n                    let changes = 0;\n                    let index = 0;\n                    let queue = [];\n                    let i, value, cd = $cd;\n                    while(cd) {\n                        for(let i=0;i<cd.watchers.length;i++) {\n                            w = cd.watchers[i];\n                            value = w.fn();\n                            if(w.a) {\n                                if(arrayCompare(w.value, value)) {\n                                    w.value = value.slice();\n                                    if(!w.ro) changes++;\n                                    w.cb(w.value);\n                                }\n                            } else {\n                                if(w.value !== value) {\n                                    w.value = value;\n                                    if(!w.ro) changes++;\n                                    w.cb(w.value);\n                                }\n                            }\n                        };\n                        if(cd.children.length) queue.push.apply(queue, cd.children);\n                        if(cd.onceList.length) {\n                            once.push.apply(once, cd.onceList);\n                            cd.onceList.length = 0;\n                        }\n                        cd = queue[index++];\n                    }\n                    loop--;\n                    if(!changes) break;\n                }\n                $$apply._p = false;\n                once.forEach(fn => {\n                    try {\n                        fn();\n                    } catch (e) {\n                        console.error(e);\n                    }\n                });\n                if(loop < 0) console.error('Infinity changes: ', w);\n            };\n    "],i=(r=function(e,t={}){let i=[],a=[],u=[];!function e(p,d){let f=0;const h=()=>{a[p]=f++},$=()=>{let e=a;t.top0&&(e=e.slice(1));let n="$parentElement";return e.forEach(e=>{n+=`[$$childNodes][${e}]`}),n};let y;function m(t){if("text"===t.type){if(y!==i.length&&h(),t.value.indexOf("{")>=0){i.push(" ");let e=c(t.value);u.push(`{\n                            let $element=${$()};\n                            $cd.wf(() => ${e}, (value) => {$element.textContent=value;});}`)}else i.push(t.value);y=i.length}else{if("script"===t.type)return;if("style"===t.type)h(),i.push(t.openTag),i.push(t.content),i.push("</style>");else if("template"===t.type)h(),i.push(t.openTag),i.push(t.content),i.push("</template>");else if("node"===t.type){if(h(),t.openTag.indexOf("{")||t.openTag.indexOf("use:")){let e=function(e){let n=e.length-1;l("<"===e[0]),l(">"===e[n]),"/"==e[n-1]&&n--;let t,i=1,r=1,o=[],a=!0;const s=()=>(l(i<e.length,"EOF"),e[i++]),c=n=>{if(i<=r)return;if(a)return void(a=!1);let l={content:e.substring(r,i+n)};t?(l.name=e.substring(r,t-1),l.value=e.substring(t,i+n),t=null):l.name=l.content,o.push(l)};let u=!1;for(;i<n;){let e=s();if('"'!==e&&"'"!==e)u?u="}"!=e:"{"!=e?e.match(/^\s$/)?(c(-1),r=i):"="!=e||t||(t=i):u=!0;else for(;e!=s(););}return c(0),o}(t.openTag),n=["<"+t.name];e.forEach(e=>{let t=function(e,n){let t=e.name.split(":"),i=t[0];function r(){let n=e.value.match(/^\{(.*)\}$/)[1];return l(n,e.content),n}if("on"==i){let i=r(),o="",a=t[1].split("|"),c=a[0];return a.slice(1).forEach(e=>{if("preventDefault"==e)o+="$event.preventDefault();";else if("enter"==e)o+="if($event.keyCode != 13) return; $event.preventDefault();";else{if("escape"!=e)throw"Wrong modificator: "+e;o+="if($event.keyCode != 27) return; $event.preventDefault();"}}),l(c,e.content),{bind:`{\n            let $element=${n()};\n            $cd.ev($element, "${c}", ($event) => { ${o} $$apply(); ${s(i)}});\n            }`}}if("bind"==i){let i=r(),o=t[1];if(l(o,e.content),"value"===o)return{bind:`{\n                    let $element=${n()};\n                    $cd.ev($element, 'input', () => { ${i}=$element.value; $$apply(); });\n                    $cd.wf(() => (${i}), (value) => { if(value != $element.value) $element.value = value; });\n                }`};if("checked"==o)return{bind:`{\n                    let $element=${n()};\n                    $cd.ev($element, 'input', () => { ${i}=$element.checked; $$apply(); });\n                    $cd.wf(() => !!(${i}), (value) => { if(value != $element.checked) $element.checked = value; });\n                }`};throw"Not supported: "+e.content}if("class"==i&&t.length>1){let i=r(),o=t[1];return l(o,e.content),{bind:`{\n                let $element = ${n()};\n                $cd.wf(() => !!(${i}), (value) => { if(value) $element.classList.add("${o}"); else $element.classList.remove("${o}"); });\n            }`}}if("use"==i){if(2==t.length){let l=e.value?r():"",i=`{let useObject = ${t[1]}(${n()}${l?", "+l:""});\n if(useObject) {`;return l&&(i+=`\n                if(useObject.update) {\n                    let w = $cd.wa(() => [${l}], (args) => {useObject.update.apply(useObject, args);});\n                    w.value = w.fn();\n                }`),{bind:i+="if(useObject.destroy) $cd.d(useObject.destroy);}}"}}l(1==t.length,e.content);let i=r();return{bind:`{\n            let $element=${n()};\n            $cd.once(() => { $$apply(); ${i}; });}`}}if(e.value&&e.value.indexOf("{")>=0){let t=c(e.value,!0);return["hidden","checked","value","disabled","selected"].indexOf(i)>=0?{bind:`{\n                    let $element=${n()};\n                    $cd.wf(() => (${t}), (value) => {$element.${i} = value;});\n                }`}:{bind:`{\n                    let $element=${n()};\n                    $cd.wf(() => (${t}), (value) => {\n                        if(value) $element.setAttribute('${i}', value);\n                        else $element.removeAttribute('${i}');\n                    });\n                }`}}return{prop:e.content}}(e,$);t.prop&&n.push(t.prop),t.bind&&u.push(t.bind)}),n=n.join(" "),n+=t.closedTag?"/>":">",i.push(n)}else i.push(t.openTag);t.closedTag||(e(p+1,t),i.push(`</${t.name}>`))}else if("each"===t.type){h(),i.push(`\x3c!-- ${t.value} --\x3e`),t.parent=d;let e=function(e,n){let t=[],i=e.body.filter(e=>"node"==e.type);i.length||(i=[e.body[0]]),l(1===i.length,"Only 1 node for #each");let a=r({body:i},{top0:!0}),c=e.value.match(/^#each\s+(\S+)\s+as\s+(\w+)\s*$/);l(c,"Wrong #each expression");let u=c[1],p=c[2],d="eachBlock"+o++;return t.push(`\n        function ${d} ($cd, top) {\n\n            function bind($ctx, ${p}, $index) {\n                ${a.source};\n                ${a.name}($ctx.cd, $ctx.el);\n                $ctx.reindex = function(i) { $index = i; };\n            };\n\n            let parentNode = top.parentNode;\n            let srcNode = document.createElement("${e.parent.name}");\n            srcNode.innerHTML=\`${s(a.tpl)}\`;\n            srcNode=srcNode.firstChild;\n\n            let mapping = new Map();\n            $cd.wa(() => (${u}), (array) => {\n                let prevNode = top;\n                let newMapping = new Map();\n\n                if(mapping.size) {\n                    let arrayAsSet = new Set();\n                    for(let i=0;i<array.length;i++) {\n                        arrayAsSet.add(array[i]);\n                    }\n                    mapping.forEach((ctx, item) => {\n                        if(arrayAsSet.has(item)) return;\n                        ctx.el.remove();\n                        ctx.cd.destroy();\n                        $$removeItem($cd.children, ctx.cd);\n                    });\n                    arrayAsSet.clear();\n                }\n\n                let i, item, next_ctx, el, ctx;\n                for(i=0;i<array.length;i++) {\n                    item = array[i];\n                    if(next_ctx) {\n                        ctx = next_ctx;\n                        next_ctx = null;\n                    } else ctx = mapping.get(item);\n                    if(ctx) {\n                        el = ctx.el;\n\n                        if(el.previousSibling != prevNode) {\n                            let insert = true;\n\n                            if(i + 1 < array.length && prevNode.nextSibling) {\n                                next_ctx = mapping.get(array[i + 1]);\n                                if(prevNode.nextSibling.nextSibling === next_ctx.el) {\n                                    parentNode.replaceChild(el, prevNode.nextSibling);\n                                    insert = false;\n                                }\n                            }\n\n                            if(insert) {\n                                parentNode.insertBefore(el, prevNode.nextSibling);\n                            }\n                        }\n    \n                        ctx.reindex(i);\n                    } else {\n                        el = srcNode.cloneNode(true);\n                        let childCD = new $$CD(); $cd.children.push(childCD);\n                        ctx = {el: el, cd: childCD};\n                        bind(ctx, item, i);\n                        parentNode.insertBefore(el, prevNode.nextSibling);\n                    }\n                    prevNode = el;\n                    newMapping.set(item, ctx);\n\n                };\n                mapping.clear();\n                mapping = newMapping;\n\n            });\n\n        }\n        ${d}($cd, ${n});\n    `),{source:t.join("\n")}}(t,$());u.push(e.source)}else if("if"===t.type){h(),i.push(`\x3c!-- ${t.value} --\x3e`);let e=function(e,n){let t=[],i=e.value.match(/^#if (.*)$/)[1];l(i,"Wrong binding: "+e.value);let a,c,u="ifBlock"+o++;return t.push(`function ${u}($cd, $parentElement) {`),e.bodyMain?(a=r({body:e.bodyMain}),c=r(e),t.push(`\n            let elsefr = $$htmlToFragment(\`${s(c.tpl)}\`);\n            ${c.source}\n        `)):a=r(e),t.push(`\n        let mainfr = $$htmlToFragment(\`${s(a.tpl)}\`);\n        ${a.source}\n    `),t.push(`\n        let childCD;\n        let elements = [];\n\n        function create(fr, builder) {\n            childCD = new $$CD();\n            $cd.children.push(childCD);\n            let el = fr.cloneNode(true);\n            for(let i=0;i<el.childNodes.length;i++) elements.push(el.childNodes[i]);\n            builder(childCD, el);\n            $parentElement.parentNode.insertBefore(el, $parentElement.nextSibling);\n        };\n\n        function destroy() {\n            if(!childCD) return;\n            $$removeItem($cd.children, childCD);\n            childCD.destroy();\n            childCD = null;\n            for(let i=0;i<elements.length;i++) elements[i].remove();\n            elements.length = 0;\n        };\n\n        $cd.wf(() => !!(${i}), (value) => {\n            if(value) {\n                destroy();\n                create(mainfr, ${a.name});\n            } else {\n                destroy();\n                `+(c?`if(elsefr) create(elsefr, ${c.name});`:"")+"\n            }\n        });\n    "),t.push(`};\n ${u}($cd, ${n});`),{source:t.join("\n")}}(t,$());u.push(e.source)}else if("comment"===t.type){if(!n.preserveComments)return;h(),i.push(t.content)}}}d.body.forEach(e=>{try{m(e)}catch(n){throw"string"==typeof n&&(n=new Error(n)),n.details||(console.log("Node: ",e),"text"==e.type?n.details=e.value.trim():"node"==e.type?n.details=e.openTag.trim():"each"==e.type?n.details=e.value.trim():"if"==e.type&&(n.details=e.value.trim())),n}}),a.length=p}(0,e);let p=[],d="$$build"+o++;return i=s(i.join("")),p.push(`function ${d}($cd, $parentElement) {\n`),p.push(u.join("\n")),p.push("};"),{name:d,tpl:i,source:p.join("")}})(e);return t.push(i.source),t.push(`\n        $element.innerHTML = \`${s(i.tpl)}\`;\n        ${i.name}($cd, $element);\n    `),n.$onMount&&t.push("$cd.once(onMount);"),n.$watchers.length&&t.push("$cd.once(() => {\n"+n.$watchers.join("\n")+"\n$$apply();\n});"),t.push("$$apply();\n})();"),t.join("")}function s(e){return e.replace(/`/g,"\\`")}function c(e,n){let t,i=0,r=0,o="",a="",c=[],u=e.length;for(n&&("{"===e[0]?n=!1:(i++,u--,l((n=e[0])===e[u],e)));i<u;){let n=e[i++];if(1!=r)"{"!==n?o+=n:(o&&(c.push("`"+s(o)+"`"),o=""),r=1);else{if(t){n===t&&(t=null),a+=n;continue}if('"'===n||"'"===n){t=n,a+=n;continue}if("}"===n){if(r=0,!(a=a.trim()))throw"Wrong expression";c.push("("+a+")"),a="";continue}a+=n}}return o&&c.push("`"+s(o)+"`"),l(0==r,"Wrong expression: "+e),c.join("+")}e.compile=function(e,n={}){const t=function(e){let n=0;const t=()=>(l(n<e.length,"EOF"),e[n++]),i=()=>{let i=n,r=t();l("<"===r,"Tag error");let o=null,a=!0,s="";for(;;)if(r=t(),o){if(r!=o)continue;o=null}else if('"'!==r)if("'"!==r){if("<"===r){let t=new Error("Wrong tag");throw t.details=e.substring(i,n),t}if(">"===r){let t=["area","base","br","col","embed","hr","img","input","link","meta","param","source","track","wbr"].indexOf(s)>=0;return{type:"node",name:s,openTag:e.substring(i,n),start:i,end:n,closedTag:t}}if(a){if(r.match(/[\da-zA-Z]/)){s+=r;continue}a=!1}}else o="'";else o='"'},r=l=>{let i,r,o,a=`</${l}>`,s=n;for(;;)if(o=r,r=t(),i){if(r!=i)continue;if("\\"==o)continue;i=null}else if('"'!=r&&"'"!=r&&"`"!=r){if("<"==r&&e.substring(n-1,n+a.length-1)==a){let t=n-1;return n+=a.length-1,e.substring(s,t)}}else i=r},o=()=>{let t=n,i=e.substring(t).indexOf("</style>")+t;return l(i>=0,"<style> is not closed"),n=i+9,e.substring(t,i)},a=()=>{let i,r=n;for(l("{"===t(),"Bind error");;){let l=t();if(i){if(l!=i)continue;i=null}else if('"'!=l&&"'"!=l&&"`"!=l){if("{"==l)throw"Error binding: "+e.substring(r,n);if("}"==l)return{value:e.substring(r+1,n-1)}}else i=l}},s=()=>{let t=n,i=e.indexOf("--\x3e",t);return l(i>=0,"Comment is not closed"),n=i+=3,e.substring(t,i)},c=u=>{let p=null;const d=()=>{p&&(u.body.push(p),p=null)};for(;n<e.length;){let f=e[n];if("<"!==f){if("{"===f&&["#","/",":"].indexOf(e[n+1])>=0){d();let e=a();if(e.value.startsWith("#each ")){let n={type:"each",value:e.value,body:[]};u.body.push(n),c(n);continue}if("/each"===e.value)return void l("each"===u.type,"Bind error: /each");if(e.value.startsWith("#if ")){let n={type:"if",value:e.value,body:[]};u.body.push(n),c(n);continue}if("/if"===e.value)return void l("if"===u.type,"Bind error: /if");if(":else"!==e.value)throw"Error binding: "+e.value;l("if"===u.type,"Bind error: :else"),u.bodyMain=u.body,u.body=[]}p||(p={type:"text",value:""}),p.value+=t()}else{if(d(),"\x3c!--"===e.substring(n,n+4)){u.body.push({type:"comment",content:s()});continue}if("/"===e[n+1]){let e="";for(n+=2;">"!==(f=t());)e+=f;return void l(e===u.name,"Wrong close-tag: "+u.name+" - "+e)}let a=i();if(u.body.push(a),"script"===a.name){a.type="script",a.content=r("script");continue}if("template"===a.name){a.type="template",a.content=r("template");continue}if("style"===a.name){a.type="style",a.content=o();continue}if(a.closedTag)continue;a.body=[];try{c(a)}catch(e){throw"string"==typeof e&&(e=new Error(e)),e.details||(e.details=a.openTag),e}}}d(),l("root"===u.type,"File ends to early")};let u={type:"root",body:[]};return c(u),u}(e);let r;t.body.forEach(e=>{"script"===e.type&&(l(!r,"Multi script"),r=e)}),n.name||(n.name="widget"),(r=i(r.content,n)).$onMount&&(n.$onMount=!0),n.$watchers=r.watchers;const o=a(t,n);return r.code.split("$$runtime()").join(o)},e.version="0.4.4",Object.defineProperty(e,"__esModule",{value:!0})});