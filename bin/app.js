function widget(n){let e,t,i="",l=[];const o='\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <script lang="javascript">\n        document.addEventListener(\'DOMContentLoaded\', function() {\n            widget(document.body);\n        }, false);\n        {runtime};\n    <\/script>\n</head>\n<body></body>\n</html>';function c(){r(),t=null;let n=e.getValue();require(["malina"],function(e){r(),i=e.version;try{var l=e.compile(n)}catch(n){return t=n.details?n.message+": "+n.details:n,void console.trace(n)}let c=o.split("{runtime}").join(l);iframe.innerHTML='<iframe frameborder="0"></iframe>';var a=iframe.firstChild.contentWindow.document;a.open(),a.write(c),a.close()})}function r(){r._p||r.planned||(r.planned=!0,setTimeout(()=>{r.planned=!1,r.go()},1))}!function(){function o(n,e){let t=n.indexOf(e);t>=0&&n.splice(t,1)}const a="childNodes";function s(){this.children=[],this.watchers=[],this.destroyList=[],this.onceList=[]}Object.assign(s.prototype,{wf:function(n,e){!function(n,e,t,i){var l={fn:e,cb:t,value:void 0};"ro"==i&&(l.ro=!0),"init"==i&&(l.value=e()),n.watchers.push(l)}(this,n,e,"ro")},wa:function(n,e){let t={fn:n,cb:e,value:void 0,a:!0};return this.watchers.push(t),t},ev:function(n,e,t){n.addEventListener(e,t),this.d(()=>{n.removeEventListener(e,t)})},d:function(n){this.destroyList.push(n)},destroy:function(){this.watchers.length=0,this.destroyList.forEach(n=>{try{n()}catch(n){console.error(n)}}),this.destroyList.length=0,this.children.forEach(n=>{n.destroy()}),this.children.length=0},once:function(n){this.onceList.push(n)}});let d=new s;const u=(n,e)=>{let t=null==n||!n.length;if(t!==(null==e||!e.length))return!0;if(!0===t)return!1;if(n.length!==e.length)return!0;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!0;return!1};r.go=(()=>{r._p=!0;try{!function(n){let e,t=10,i=[];for(;t>=0;){let l,o=0,c=0,r=[],a=n;for(;a;){for(let n=0;n<a.watchers.length;n++)e=a.watchers[n],l=e.fn(),e.a?u(e.value,l)&&(e.value=l.slice(),e.ro||o++,e.cb(e.value)):e.value!==l&&(e.value=l,e.ro||o++,e.cb(e.value));a.children.length&&r.push.apply(r,a.children),a.onceList.length&&(i.push.apply(i,a.onceList),a.onceList.length=0),a=r[c++]}if(t--,!o)break}r._p=!1,i.forEach(n=>{try{n()}catch(n){console.error(n)}}),t<0&&console.error("Infinity changes: ",e)}(d)}finally{r._p=!1}}),n.innerHTML='\n\n<div class="header row">\n    <div style="float: right;margin: 16px 40px 4px 40px;">\n        <a target="_blank" href="https://github.com/malinajs/repl/blob/master/app.html">Source code of this REPL-app</a> <br/>\n        <img style="height: 18px;" src="https://help.github.com/assets/images/site/favicon.ico"/>\n        <a style="vertical-align: top;" target="_blank" href="https://github.com/malinajs/malinajs">GitHub Malina.js</a>\n    </div>\n    <h2>Malina.js - repl</h2>\n    <span style="color: red;">Select example</span>\n    <select>\n        \x3c!-- #each templates as tpl --\x3e\n    </select>\n    <button>Share code</button>\n</div> \n<div class="body row">\n    <div class="wrapper">\n        <div class="left">\n            <div></div>\n        </div>\n        <div class="right">\n            <div class="iframe-container"></div>\n        </div>\n    </div>\n</div> \n<div class="footer row">\n    <div style="float: right; margin: 16px; color: cornflowerblue;"> </div>\n\n    \x3c!-- #if error --\x3e\n</div>\n\n\n\x3c!-- TEMPLATES BELOW --\x3e\n\n\x3c!--\nname: Hello world\n\n<script>\n  let name = \'world\';\n<\/script>\n\n<h1>Hello {name.toUpperCase()}!</h1>\n--\x3e\n\n\n\x3c!--\nname: Binding\n\n<script>\n  let name = \'world\';\n  let active = false;\n<\/script>\n\nEnter name: <input type="text" bind:value={name} />\nHello {name}!\n<br/>\n<input type="checkbox" bind:checked={active} /> {active}\n--\x3e\n\n\n\x3c!--\nname: Events\n\n<script>\n  let name = \'\';\n  let event = \'\';\n  const click = (e) => {\n    event = e.x + \'x\' + e.y;\n  }\n<\/script>\n\nEnter word and press enter:\n<input bind:value={name} on:keydown|enter={name=\'\'} /> {name}\n<br />\n<button on:click={click($event)}>Click!</button>\n<a href on:click|preventDefault={event=$element.textContent}>Click</a>\n{event}\n\n<ul>\n  <li>\n    <b>on:event</b> to listen event, available locals: <i>$element, $event</i>\n  </li>  \n  <li>\n    modifier "preventDefault" to use <i>event.preventDefault()</i>\n  </li>\n  <li>\n    modifier "enter": on:keydown|enter - listen work if keyCode == 13 (Enter), modifer "escape" when keyCode == 27\n  </li>\n</ul>\n--\x3e\n\n\n\x3c!--\nname: Class and style\n\n<script>\n  let value;\n<\/script>\n\n<input type="checkbox" bind:checked={value} /> switch\n \n<div class:blue={value} class:red={!value}>Linux</div>\n<div class="{value?\'red\':\'blue\'}">MacOS</div>\n<b style="color: {value?\'green\':\'red\'};">Windows</b>\n\n<style>\n  .blue {background-color: cornflowerblue;}\n  .red {background-color: tomato;}\n</style>\n--\x3e\n\n\n\x3c!--\nname: if - else block\n\n<script>\n  let value;\n<\/script>\n\n<input type="checkbox" bind:checked={value} /> switch\n<br/>\n\n{#if value}\n\tcheckbox is on\n{:else}\n\t[else] block, switch checkbox\n{/if}\n--\x3e\n\n\x3c!--\nname: Each/repeat blocks\n\n<script>\n  let items = [];\n  let name;\n  \n  const add = () => {\n    items.push({name: name});\n    name = \'\';\n  };\n  const remove = i => {\n    items.splice(i, 1);\n  }\n  const reverse = (item) => {\n    item.name = item.name.split(\'\').reverse().join(\'\');\n  }\n<\/script>\n\nEnter text and press enter:\n<input type="text" bind:value={name} on:keydown|enter={add()} />\n\n<ul>\n  {#each items as item}\n  <li>\n    {$index}: {item.name}\n    <a href on:click|preventDefault={reverse(item)}>reverse</a>\n    <a href on:click|preventDefault={remove($index)}>remove</a>\n  </li>\n  {/each}\n</ul>\n--\x3e\n\n\n\x3c!--\nname: Directive \'use\'\n\n<script>\n  let visible = false;\n  const setStyle = el => {\n    el.style.color = \'red\';\n  }\n  let boldElement;\n<\/script>\n\n<input type="checkbox" bind:checked={visible} />\n<span use={setStyle($element)}>set focus input on render</span>\n\n<div>\n  {#if visible}\n\t<input type="text" use={$element.focus()} />\n  {/if}\n</div>\n\nsave element in <b use={boldElement=$element}>variable</b>\n--\x3e\n\n\x3c!--\nname: Todo app\n\n<script>\n  let name = \'\';\n  let todos = [];\n  let active;\n  \n  function add() {\n    if(!name) return;\n    todos.push({name: name});\n    name = \'\';\n  }\n  \n  const remove = i => todos.splice(i, 1);\n  const numDone = () => todos.filter(t => t.done).length;\n<\/script>\n\n{#if active}\nEdit: <input type="text" on:keydown|enter={active=null} bind:value={active.name} use={$element.focus()} />\n{:else}\n<input type="text" on:keydown|enter={add()} bind:value={name} />\n{/if}\n\n<ul>\n  {#each todos as todo}\n  <li class:active={todo == active} class:inactive={todo.done}>\n    <input type="checkbox" bind:checked={todo.done} />\n    <span on:click={active=todo}>{$index}:  {todo.name}</span>\n    <a href on:click|preventDefault={remove($index)}>remove</a>\n  </li>\n  {/each}\n</ul>\n\nTotal done: {numDone()} of {todos.length}\n\n<style>\n  li {cursor: pointer;}\n  .active {background-color: #cfc;}\n  .inactive {text-decoration-line: line-through; color: gray;}\n</style>\n--\x3e\n\n\n\x3c!--\nname: Custom directive, actions, onMount\n\n<script>\n  let colors = [\'red\', \'blue\', \'green\', \'deeppink\', \'brown\'];\n  let list = [\n    {name: \'Linux\', n: 0},\n    {name: \'MacOS\', n: 1},\n    {name: \'Windows\', n: 2},\n    {name: \'Ubuntu\', n: 3},\n    {name: \'FreeBSD\', n: 4}\n  ];\n\n  let div;\n\n  const color = (element, item, n) => {\n    // on mount action\n    function inc() {item.n++;}\n    element.addEventListener(\'click\', inc);\n    element.style.color = colors[n];\n\n    return {\n      \n      // on update action\n      update: (item, n) => {\n        if(n < colors.length) {\n          element.style.color = colors[n];\n          div.style.backgroundColor = colors[n];\n        }\n        else list.splice(list.indexOf(item), 1);\n      },\n      \n      // on destroy action\n      destroy: () => {\n        element.removeEventListener(\'click\', inc);\n      }\n    }\n  }\n\n  function onMount() {\n    // on mount component\n  }\n<\/script>\n\n<div use={div=$element}>Run code from html, e.g. save element into variable</div>\n\n<ul style="cursor: pointer; user-select: none;">\n  {#each list as it}\n  <li use:color={it, it.n}>{it.name} - {it.n}</li>\n  {/each}\n</ul>\n--\x3e\n\n\n\x3c!--\nname: Reactivity, detecting changes\n\n<script>\n  let name = \'world\';\n  let header;\n  let div;\n\n  // 1) with assignment: variable is changed when expression give another result\n  // $: variable = expression\n  $: header = name.toUpperCase();\n\n  // 2) with function: function is called when any expression is changed\n  // $: exp1, exp2, exp3, function(valueOfExpression) {}\n  $: name.length, div, (len, el) => {if(el) el.innerText = len};\n\n  $: name, () => console.log(name);\n<\/script>\n\n<h1>Hello {header}!</h1>\n<input type="text" bind:value={name} />\n\n<div on:click={div=$element} class:active={div==$element}>Click here</div>\n<div on:click={div=$element} class:active={div==$element}>Click here</div>\n\n\n<style>\n  div {\n    border: 1px solid gray;\n    min-height: 12px;\n    margin: 2px;\n    padding: 2px;\n    width: 100px;\n    cursor: pointer;\n  }\n  .active {border: 1px solid red;}\n</style>\n--\x3e\n',function(n,d){{let t=d[a][1][a][7];n.ev(t,"input",n=>{r(),u=n.target.value,r(),u&&(e.setValue(l[Number(u)].content),c())})}var u;!function(n,e){function t(n,e,t){!function(n,i){{let e=i;n.wf(()=>t,n=>{e.setAttribute("value",n)})}{let t=i[a][0];n.wf(()=>e.name,n=>{t.textContent=n})}}(n.cd,n.el),n.reindex=function(n){t=n}}let i=e.parentNode,c=document.createElement("select");c.innerHTML="<option> </option>",c=c.firstChild;let r=new Map;n.wa(()=>l,l=>{let a,d,u,m,h,p=e,v=new Map;if(r.size){let e=new Set;for(let n=0;n<l.length;n++)e.add(l[n]);r.forEach((t,i)=>{e.has(i)||(t.el.remove(),t.cd.destroy(),o(n.children,t.cd))}),e.clear()}for(a=0;a<l.length;a++){if(d=l[a],u?(h=u,u=null):h=r.get(d),h){if((m=h.el).previousSibling!=p){let n=!0;a+1<l.length&&p.nextSibling&&(u=r.get(l[a+1]),p.nextSibling.nextSibling===u.el&&(i.replaceChild(m,p.nextSibling),n=!1)),n&&i.insertBefore(m,p.nextSibling)}h.reindex(a)}else{m=c.cloneNode(!0);let e=new s;n.children.push(e),t(h={el:m,cd:e},d,a),i.insertBefore(m,p.nextSibling)}p=m,v.set(d,h)}r.clear(),r=v})}(n,d[a][1][a][7][a][1]);{let t=d[a][1][a][9];n.ev(t,"click",n=>{r(),function(){r();let n=e.getValue();document.location.hash="src="+encodeURIComponent(n)}()})}{let t=d[a][3][a][1][a][1][a][1];n.once(()=>{r(),function(n){let t;r(),require(["cm/lib/codemirror","cm/mode/htmlmixed/htmlmixed","cm/mode/xml/xml","cm/mode/javascript/javascript","cm/mode/css/css"],function(i){r(),(e=i(n,{mode:"htmlmixed",scrollbarStyle:"null",height:"auto",width:"auto",lineWrapping:!0,lineNumbers:!0})).on("change",(n,e)=>{r(),"setValue"!=e.origin&&(t&&clearTimeout(t),t=setTimeout(()=>{r(),t=0,c()},300))}),document.body.childNodes.forEach(n=>{if(r(),8!=n.nodeType)return;let e=n.textContent.trim().match(/^name: ([^\n]+)\n([\S\s]+)$/);e&&l.push({name:e[1],content:e[2].trim()})});let o=document.location.hash;o.startsWith("#src=")?e.setValue(decodeURIComponent(o.substring(5))):e.setValue(l[0].content),c()})}(t)})}{let e=d[a][3][a][1][a][3][a][1];n.once(()=>{r(),iframe=e})}{let e=d[a][5][a][1][a][0];n.wf(()=>"\n        "+i+"\n    ",n=>{e.textContent=n})}!function(n,e){let i,l=function(n){let e=document.createElement("template");return e.innerHTML=n,e.content}('\n        <div style="color: red;"> </div>\n    ');function c(n,e){{let i=e[a][1][a][0];n.wf(()=>"\n            "+t+"\n        ",n=>{i.textContent=n})}}let r=[];function d(){if(i){o(n.children,i),i.destroy(),i=null;for(let n=0;n<r.length;n++)r[n].remove();r.length=0}}n.wf(()=>!!t,t=>{t?(d(),function(t,l){i=new s,n.children.push(i);let o=t.cloneNode(!0);for(let n=0;n<o.childNodes.length;n++)r.push(o.childNodes[n]);l(i,o),e.parentNode.insertBefore(o,e.nextSibling)}(l,c)):d()})}(n,d[a][5][a][3])}(d,n),r()}()}